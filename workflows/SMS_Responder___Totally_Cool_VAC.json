{
  "name": "SMS Responder - Totally Cool VAC",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "com.twilio.messaging.inbound-message.received"
        ]
      },
      "type": "n8n-nodes-base.twilioTrigger",
      "typeVersion": 1,
      "position": [
        -3860,
        380
      ],
      "id": "399e1bca-7402-4421-acaa-91661fd43891",
      "name": "Twilio Trigger",
      "webhookId": "8d143763-1567-4f78-96f9-82d6f8301a9b",
      "disabled": true
    },
    {
      "parameters": {
        "from": "={{ $('Edit Fields').item.json.to }}",
        "to": "={{ $('Edit Fields').item.json.sessionId }}",
        "message": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        -60,
        480
      ],
      "id": "900f35c9-0d5b-49f6-a245-8650cf9dc240",
      "name": "Twilio",
      "credentials": {
        "twilioApi": {
          "id": "K9A1xsATyDxPP7DE",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=Your name is Revana.  You are a helpful contractor that specializes in HVAC installation, maintenance and repair.  Make your answers brief and purely textual.  Do not use any kind of markup.\n\nStart the conversation by showing the user their name, if you know it, and asking them for it if you do not.  Do the same for the address they are contacting you about.  The name and address are important, so ALWAYS persist them to long term storage as soon as the user gives you any of those pieces of information (but do not tell the user).  Then ask if they wish to schedule a service appointment or if they would like you to help them with an issue.\n\nCreate a lead once you know the address and the type of service contractor the user needs, but do not tell the user.\n\nAsk the user questions, one at a time, to understand the problem they are having and try to offer some suggestions to troubleshoot their issue.  When you or thinks they should book an appointment with a professional, you are that professional.  You may suggest some dates and times in the MST timezone, starting with the soonest available.  Number the suggestions.\n\nYou have  these memories about the user:\n{{ $('Code').item.json.memories }}\n\nToday is {{ $('Edit Fields').item.json.now }}\nProvider ID is {{ $('Edit Fields').item.json.providerId }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1360,
        640
      ],
      "id": "46fe9293-a610-4bab-9e85-c5da4e5652ba",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1440,
        820
      ],
      "id": "1253ff04-e95f-4dbb-b519-6d7f29632fee",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "gsKddIL1GgHH348U",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1580,
        780
      ],
      "id": "d4cc8291-dfc1-4173-9af5-69342a0c01ae",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bb9845b2-3af0-4943-a15f-b7a52145d23d",
              "name": "sessionId",
              "value": "={{ $('Coalesce Trigger Inputs').item.json.from }}",
              "type": "string"
            },
            {
              "id": "c43e5a96-ca5b-4b3d-b0b9-1a17256d3719",
              "name": "chatInput",
              "value": "={{ $('Coalesce Trigger Inputs').item.json.body }}",
              "type": "string"
            },
            {
              "id": "5630f842-cd4f-46c0-9d8f-c378671f04a9",
              "name": "now",
              "value": "={{ new Date() }}",
              "type": "string"
            },
            {
              "id": "5d09832d-ecc5-4ac8-952c-dae90313eff9",
              "name": "providerId",
              "value": "={{ $('Global Constants').item.json.constants.SMS_RESPONSE_SERVICE_PROVIDER }}",
              "type": "string"
            },
            {
              "id": "df27d187-2155-4ab5-be0b-7e99fe9d4e1b",
              "name": "to",
              "value": "={{ $('Coalesce Trigger Inputs').item.json.to }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1940,
        740
      ],
      "id": "ce05bf55-99a1-45cc-8fae-87b934375ff2",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "toolDescription": "Returns a list of contractors that will service a specific ZIP code.",
        "url": "https://prod-26.westus.logic.azure.com/workflows/9aaf160de7794f35a20c56c42caba55d/triggers/manual/paths/invoke/recommendation/contractor/HVAC/33173?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=3NMClW8SmaW9L2TpyHQrAQj_9Fs4mME51JU7721Uni0&"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -360,
        1240
      ],
      "id": "f97012b2-95a2-4dcf-9473-19ab410765f3",
      "name": "HTTP Request",
      "disabled": true
    },
    {
      "parameters": {
        "mode": "delete",
        "deleteMode": "all"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -1260,
        400
      ],
      "id": "e57a2c3d-4c73-4221-ad57-8abeecc4c5f1",
      "name": "Chat Memory Manager"
    },
    {
      "parameters": {
        "url": "https://api.cal.com/v2/slots",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "start",
              "value": "2024-03-15"
            },
            {
              "name": "end",
              "value": "2025-03-20"
            },
            {
              "name": "eventTypeId",
              "value": "1991788"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": " cal-api-version",
              "value": "2024-09-04"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3920,
        1340
      ],
      "id": "115e8f77-bb18-45ee-b9c4-ae14ee41a320",
      "name": "HTTP Request (Get Available Slots)",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QBDLgIWF9t1nix6l",
          "name": "Cal.com Header Auth"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.cal.com/v2/event-types",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "totallycoolhvac"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cal-api-version",
              "value": "2024-06-14"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3440,
        1380
      ],
      "id": "ae010854-bfa7-47ac-8f24-6ac88b55aeb4",
      "name": "HTTP Request (Get Event Types)",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QBDLgIWF9t1nix6l",
          "name": "Cal.com Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "Recommend_Contractors",
        "description": "Returns a list of contractors that will service a specific ZIP code.",
        "workflowId": {
          "__rl": true,
          "value": "VfqOK6Znc5Si8Z6n",
          "mode": "list",
          "cachedResultName": "SMS Responder - Recommend Contractors"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "zip": "1234",
            "product": "12334"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "zip",
              "displayName": "zip",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "product",
              "displayName": "product",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -220,
        1220
      ],
      "id": "4a32d04f-faba-4de7-85be-f44d8782aa99",
      "name": "Call (Recommend a Contractor)",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Book an appointment at an agreed date and time to occur at a specified location.",
        "method": "POST",
        "url": "https://api.cal.com/v2/bookings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": " cal-api-version",
              "valueProvider": "fieldValue",
              "value": "2024-08-13"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"eventTypeId\" : 1991788,\n  \"start\" : \"{start_date_time}\",\n  \"location\" : \"{appointment_address}\",\n  \"attendee\" : {\n    \"name\" : \"Fred O'Tester\",\n    \"timeZone\" : \"America/Phoenix\",\n    \"email\" : \"fredotester@mackemlad.com\",\n    \"phoneNumber\" : \"{{ $json.sessionId }}\"\n  },\n  \"metadata\" : {\n    \"product\" : \"{type_of_service}\"\n  }\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "start_date_time",
              "description": "Date and time that the appointment should start in UTC timezone",
              "type": "string"
            },
            {
              "name": "appointment_address",
              "description": "Address at which the appointment will take place",
              "type": "string"
            },
            {
              "name": "type_of_service",
              "description": "The type of service required; one of: HVAC, Plumbing, Roofing, Flooring",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -980,
        1120
      ],
      "id": "f58b9d52-8aa7-49e1-9cd3-d16334b8545b",
      "name": "Book Appointment",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QBDLgIWF9t1nix6l",
          "name": "Cal.com Header Auth"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Find available dates and times to book an appointment.",
        "url": "https://api.cal.com/v2/slots",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "eventTypeId",
              "valueProvider": "fieldValue",
              "value": "1991788"
            }
          ]
        },
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": " cal-api-version",
              "valueProvider": "fieldValue",
              "value": "2024-09-04"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -1160,
        1120
      ],
      "id": "ea4366be-269c-4a63-a537-7d2068860e11",
      "name": "Check Availability",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QBDLgIWF9t1nix6l",
          "name": "Cal.com Header Auth"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cal.com/v2/bookings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": " cal-api-version",
              "value": "2024-08-13"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"eventTypeId\" : 1991788,\n  \"start\" : \"2025-03-30T09:00:00Z\",\n  \"attendee\" : {\n    \"name\" : \"Fred O'Tester\",\n    \"timeZone\" : \"America/Phoenix\",\n    \"email\" : \"fredotester@mackemlad.com\",\n    \"phoneNumber\" : \"+18043248290\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3700,
        1460
      ],
      "id": "a70abbdd-d870-40a7-8938-772c9c5cb396",
      "name": "HTTP Request (Book Appointment)",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QBDLgIWF9t1nix6l",
          "name": "Cal.com Header Auth"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a7bf304f-2d42-434e-ab04-3b4348d846ad",
              "name": "output",
              "value": "Hello! Thank you for contacting Totally Cool HVAC. My name is Revana, and I'm here to assist you with scheduling an appt or any equipment issues..  To begin, may I please have your name?",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -720,
        400
      ],
      "id": "3538f038-0ed7-4487-aa72-41b805133514",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "url": "https://api.cal.com/v2/bookings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": " cal-api-version",
              "value": "2024-08-13"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3680,
        1260
      ],
      "id": "8bd03c3a-58c5-4cb7-b888-f70b3704d3d8",
      "name": "HTTP Request (Get Bookings)",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QBDLgIWF9t1nix6l",
          "name": "Cal.com Header Auth"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-globals.globalConstants",
      "typeVersion": 1,
      "position": [
        -2620,
        740
      ],
      "id": "2d23a13f-eb58-476b-8c34-1cc2ee662d32",
      "name": "Global Constants",
      "credentials": {
        "globalConstantsApi": {
          "id": "vIUTwCb1Kva2Iq7e",
          "name": "Global Constants account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Persists to long term storage important information that you must remember, such as:\nFIRST_NAME\nLAST_NAME\nADDRESS\nATTOM_ID\n\nNote that if you are calling this tool you should also consider calling the Create Lead tool.",
        "method": "POST",
        "url": "=https://n8n{{ $('Global Constants').item.json.constants.ENVIRONMENT_SUFFIX }}.property.com/webhook/memorize",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "chat_id",
              "valueProvider": "fieldValue",
              "value": "={{ $('Edit Fields').item.json.sessionId }}"
            },
            {
              "name": "key"
            },
            {
              "name": "value"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -1440,
        1100
      ],
      "id": "9798713b-4d35-4d5a-a102-874e32bb3bd4",
      "name": "Persist Important Details"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "memories",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "chat_id",
              "condition": "eq",
              "keyValue": "={{ $('Coalesce Trigger Inputs').item.json.data.from }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2400,
        740
      ],
      "id": "cc1659fc-0500-4d51-b9f8-e79f8f256e65",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "oDZ5EdRotsnTnAib",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let output = [];\nlet memories_string = \"\";\n\nfor (const item of $input.all()) {\n  memories_string += `${item.json.key}=${item.json.value}\\r\\n`;\n}\n\noutput.push(\n    {\n      \"json\": {\n        \"memories\": memories_string\n      },\n      \"pairedItem\" : 0\n    }\n);\n\nreturn output;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2160,
        740
      ],
      "id": "8b3111d8-0099-4355-a649-2af0e8652ee4",
      "name": "Code",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "memories",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "chat_id",
              "condition": "eq",
              "keyValue": "={{ $('Edit Fields').item.json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -900,
        300
      ],
      "id": "e2a21296-f1ef-48a3-8372-78634402e0b4",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "oDZ5EdRotsnTnAib",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "MentionPropertyDetails",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3860,
        940
      ],
      "id": "58d5e4f6-e01a-4d40-b2d9-355e5c57e1d8",
      "name": "Webhook - Mention Property Details",
      "webhookId": "90537090-f1a6-4ea6-96b4-97bcaa824888",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bb9845b2-3af0-4943-a15f-b7a52145d23d",
              "name": "sessionId",
              "value": "={{ $json.from }}",
              "type": "string"
            },
            {
              "id": "c43e5a96-ca5b-4b3d-b0b9-1a17256d3719",
              "name": "chatInput",
              "value": "={{ $json.body }}",
              "type": "string"
            },
            {
              "id": "5630f842-cd4f-46c0-9d8f-c378671f04a9",
              "name": "now",
              "value": "={{ new Date() }}",
              "type": "string"
            },
            {
              "id": "6bce6af0-486c-4a01-a5f5-4482c8f7d9ef",
              "name": "to",
              "value": "={{ $json.to }}",
              "type": "string"
            },
            {
              "id": "292b627e-d817-46b2-9b2d-bb267ea9d58c",
              "name": "source",
              "value": "={{ $json.source }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2840,
        740
      ],
      "id": "0c90797e-fdfb-46e4-93d0-05c41171ff97",
      "name": "Coalesce Trigger Inputs"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "396949b7-a228-4cbe-bd30-332bcc5bee70",
              "name": "body",
              "value": "=Summarize the following information about my home with regard to the topic under discussion, paying particular attention to the age of the property and the life expectancy of the parts.  If there are any permits to change or update parts of my property, consider the date of the permit to be the replacement date of that part.\n\nOnly mention the ONE system that you are discussing with the user (e.g. HVAC, Plumbing, Roofing, etc.).\n\nProperty Attributes:\n{{ JSON.stringify($json.propertyAttributes) }}\n\nProperty Permits:\n{{ JSON.stringify($json.propertyPermits) }}",
              "type": "string"
            },
            {
              "id": "bff63cce-3fc3-4bf1-9e3a-8a546d809fb4",
              "name": "source",
              "value": "={{ $json.source }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3260,
        940
      ],
      "id": "ffb16d41-0583-449b-b987-054b89b19899",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json = item.json.body;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3520,
        940
      ],
      "id": "9fd996bb-c89a-4d4f-a9e0-dacae7a6e4bf",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json = item.json.data;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3540,
        380
      ],
      "id": "1616344c-87d0-47d2-8384-05cbfc22b0b2",
      "name": "Code2"
    },
    {
      "parameters": {
        "toolDescription": "Creates a lead based on the address and product needed.  Call this tool as early as possible in the conversation once you know the address and the type of contractor the user needs.  When booking an appointment, create a lead if you haven't already done so.",
        "method": "POST",
        "url": "=https://n8n{{ $('Global Constants').item.json.constants.ENVIRONMENT_SUFFIX }}.property.com/webhook/create-lead",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"session_id\" : \"{{ $('Edit Fields').item.json.sessionId }}\",\n  \"to\" : \"{{ $('Edit Fields').item.json.to }}\",\n  \"pcom_providertype\" : \"434940000\",\n  \"pcom_contactstreet1\": \"{service_address_street}\",\n  \"pcom_contactpostalcode\": \"{service_address_postalcode}\",\n  \"pcom_source\": \"SMS\",\n  \"pcom_needlevel\": \"434940001\",\n  \"pcom_attomid\": \"\",\n  \"pcom_name\": \"New Lead\",\n  \"pcom_receivedon\": \"{now}\",\n  \"pcom_serviceproviderid\": \"{provider_id}\"\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "service_address_street",
              "description": "The street component of the address for which the customer is seeking assistance",
              "type": "string"
            },
            {
              "name": "now",
              "description": "Current date and time.",
              "type": "string"
            },
            {
              "name": "provider_id",
              "description": "The ID of the service provider",
              "type": "string"
            },
            {
              "name": "service_address_postalcode",
              "description": "The postal (ZIP) code of the address for which the customer is seeking assistance.",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -1600,
        1160
      ],
      "id": "ca97bf2a-d979-4505-8295-a62751f078ee",
      "name": "Create Lead"
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! ðŸ‘‹\nThank you for contacting Totally Cool HVAC. My name is Revana, and I'm here to assist you with scheduling an appt or any equipment issues..  To begin, may I please have your name?",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -3860,
        580
      ],
      "id": "d437c07f-b759-4df4-a533-93531b16e561",
      "name": "When chat message received",
      "webhookId": "d0159bbc-a40d-455e-9cba-ea1791c347c6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "49463c5e-7c03-4401-a0ee-d3496e405c0d",
              "name": "from",
              "value": "={{ $json.sessionId }}",
              "type": "string"
            },
            {
              "id": "23a5cb2f-15b6-4057-bf7a-0b19004e3e5b",
              "name": "to",
              "value": "chat",
              "type": "string"
            },
            {
              "id": "4ceef508-2b8a-49d0-84d0-9581b5e498c6",
              "name": "source",
              "value": "chat",
              "type": "string"
            },
            {
              "id": "89fb9622-205c-4729-ba04-fd71e3a1c4d0",
              "name": "body",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3280,
        580
      ],
      "id": "e25c5145-2ea9-4953-a2eb-0c930dfac352",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f30f964d-6762-4279-a31b-40196da627bd",
              "name": "source",
              "value": "sms",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3280,
        380
      ],
      "id": "9d4ee742-7d4a-41eb-a954-0b8446e0c42d",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Coalesce Trigger Inputs').item.json.source }}",
                    "rightValue": "telegram",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6fab15b1-a4e5-4411-8639-a8a45102ba4b",
                    "leftValue": "={{ $('Coalesce Trigger Inputs').item.json.source }}",
                    "rightValue": "sms",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dc0105c8-24b7-46ea-9fef-b79725389e1c",
                    "leftValue": "={{ $('Coalesce Trigger Inputs').item.json.source }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": "={{ false }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -360,
        540
      ],
      "id": "1f4bdd63-2ccf-4a6c-a19e-fa7236dcd563",
      "name": "Switch1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1b017ba5-61a6-4142-904c-ea37d1f1207f",
              "name": "output",
              "value": "={{ $json.output}}",
              "type": "string"
            },
            {
              "id": "923b7125-81f6-4cd7-abfc-66085a0e7f49",
              "name": "text",
              "value": "woop",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -60,
        680
      ],
      "id": "3ed27ae6-1cc9-4d2b-b6a9-2168d3a3bd83",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -3860,
        180
      ],
      "id": "c2c3bef0-c367-48a8-a72f-282c2d23a669",
      "name": "Telegram Trigger",
      "webhookId": "d71119eb-2256-4ac3-8818-d13917b9aab3",
      "credentials": {
        "telegramApi": {
          "id": "jLS6pwDDz9om9aq5",
          "name": "Telegram account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "396949b7-a228-4cbe-bd30-332bcc5bee70",
              "name": "body",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "60d9cd93-6a60-4717-8623-71e0990733e4",
              "name": "from",
              "value": "={{ $json.message.from.id }}",
              "type": "string"
            },
            {
              "id": "77efc8ba-1bc9-4492-88d7-78794e11332d",
              "name": "telegram",
              "value": "",
              "type": "string"
            },
            {
              "id": "09d0247e-39ec-491c-8b69-f7d8a47bdec8",
              "name": "source",
              "value": "telegram",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3280,
        180
      ],
      "id": "25b8aaa8-2cc3-4ecd-b60d-816d86f17803",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n{{ $('Global Constants').item.json.constants.ENVIRONMENT_SUFFIX }}.property.com/webhook/memorize",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $json.from }}"
            },
            {
              "name": "key",
              "value": "SUMMARY"
            },
            {
              "name": "value",
              "value": "YES"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2080,
        540
      ],
      "id": "43249238-2202-4a1e-bbae-49c07e0c456a",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ac0a6b2c-6284-47ba-af8e-0b9e4a4906ae",
              "leftValue": "={{ $json.mode }}",
              "rightValue": "SUMMARY",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2320,
        560
      ],
      "id": "bd64f30f-9c55-4bdd-bff4-8431d57b6bd1",
      "name": "If"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.chatInput }}",
                    "rightValue": "NEW",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f9cb5a72-ed9f-4f02-b365-86f64f471266",
                    "leftValue": "={{ $json.chatInput }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1680,
        460
      ],
      "id": "4562139c-dfde-4496-9951-fbc371d2d41c",
      "name": "Switch2"
    },
    {
      "parameters": {
        "chatId": "={{ $('Coalesce Trigger Inputs').item.json.from }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -60,
        320
      ],
      "id": "065e3231-0063-4ba9-b1f8-d001a101947a",
      "name": "Telegram",
      "webhookId": "39c08353-9a9b-4f16-b178-2e920ed827c8",
      "credentials": {
        "telegramApi": {
          "id": "jLS6pwDDz9om9aq5",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Chat Triggers\nMultiple triggers each set common properties that are passed through the common Coaleasce node.",
        "height": 1180,
        "width": 960,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3980,
        -20
      ],
      "id": "fa413d79-3bb4-4938-8ffa-0d70127c3388",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## User Message Triggers\nInvoked by the user sending a message.",
        "height": 660,
        "width": 320,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3940,
        100
      ],
      "id": "f6343db9-2df2-4e96-b386-6f108a6f7cc0",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## System Message Triggers\nUnvoked by the system (e.g. to trigger an additional response as if the user had submitted the message).",
        "height": 340,
        "width": 320,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3940,
        800
      ],
      "id": "ede73277-7a68-4109-ae53-c0582a306463",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Prepare Submission\nSupplement the user's submitted message with additional properties describing the chat so far.",
        "height": 620,
        "width": 1120,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2920,
        320
      ],
      "id": "2a235184-cd7a-49c8-b361-84b2b00c9f19",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Remember Summarization\nIf this is a system-generated summary, log that we've shown it so that it doesn't get repeated later.",
        "height": 260,
        "width": 660,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2480,
        440
      ],
      "id": "60dbe24f-2f4f-4fa2-898a-1a7613f5d3aa",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Generate Response\nHandle certain keywords or submit the message to the AI.",
        "height": 1140,
        "width": 1160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1720,
        200
      ],
      "id": "e995c20c-231d-4dac-9b7b-878760228287",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Clear History for This Chat",
        "height": 300,
        "width": 720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1300,
        240
      ],
      "id": "ee163feb-4dda-4e59-92fc-73de0873b0a2",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Tools Available to AI",
        "height": 300,
        "width": 840,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1680,
        1000
      ],
      "id": "88eb63af-965e-4826-8cee-06d7a61276fd",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Internal",
        "height": 220,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1660,
        1060
      ],
      "id": "f3a4cf59-df58-4069-b820-3fe409285e22",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Out of Scope",
        "height": 220,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -440,
        1180
      ],
      "id": "903fdc13-eaf0-41f6-827d-434ccb6a66d8",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "# Respond via the Appropriate Channel\n",
        "height": 640,
        "width": 740,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        220
      ],
      "id": "8fb7e759-5d29-43b7-a1c9-78942bbc6cb8",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "# Test triggers",
        "height": 460,
        "width": 800,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3980,
        1220
      ],
      "id": "85afc0c8-03a1-4be4-a40f-7f71c0a9c7bc",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Cal.com",
        "height": 220,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1220,
        1060
      ],
      "id": "b91a3496-0a04-4d68-b8b8-bdf7d04fd5eb",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 500,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4180,
        180
      ],
      "id": "68191dfe-7cfe-481e-9957-8038902b6765",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "### Activate in Production\nThese triggers will consume messages that are intended for the Production system.  Until messages originate from Dev instances of Twilio and Telegram, they must remain deactivated in Dev and be Activated when deployed to Production",
        "height": 380,
        "width": 280,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4180,
        180
      ],
      "id": "33dcbff0-024c-48dd-99f5-3ffa9641181b",
      "name": "Sticky Note15"
    }
  ],
  "pinData": {},
  "connections": {
    "Twilio Trigger": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call (Recommend a Contractor)": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Book Appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check Availability": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Global Constants": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Persist Important Details": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Mention Property Details": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Coalesce Trigger Inputs": {
      "main": [
        [
          {
            "node": "Global Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Coalesce Trigger Inputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Lead": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Coalesce Trigger Inputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Coalesce Trigger Inputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Twilio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Coalesce Trigger Inputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Memory Manager",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9c4f8a96-c0be-45e9-87ae-677c463775a6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f876f250fa5a115d8d07a94200dc89936ebeaf5e3f23d504444e5e3ce0a4587b"
  },
  "id": "y8AxwekfTN4QBV90",
  "tags": [
    {
      "createdAt": "2025-03-05T17:09:03.666Z",
      "updatedAt": "2025-03-05T17:09:03.666Z",
      "id": "HN3IibgUw3BIOuEX",
      "name": "POC"
    }
  ]
}
